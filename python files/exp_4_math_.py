# -*- coding: utf-8 -*-
"""exp_4_math .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PlUMBrxHME1lFnK8_Yud8qzueA_YpAWI
"""

import numpy as np
from numpy import random

ar1=random.randint(low=1,high=20,size=(4,4))

ar2=random.randint(low=1,high=20,size=(4,4))

ar1

ar2

"""**sum**"""

np.sum(ar1)

np.sum(ar1,axis=0)#axis 1 means coloumn wise 13+5+14+6

np.sum(ar1,axis=1)# axis 1 means row wise 13+6+9+5

np.sum(ar1,where = ar1>11)#it will sum numbers greater than 11

np.sum(ar1,axis=0,where=ar1>11)

np.sum(ar1,axis=1,where=ar1<11)

"""**Min & Max**"""

np.min(ar2)#gives minimum value of array

np.max(ar2)#gives maximum value of array

"""**argmin() & argmax()**"""

np.argmin(ar2)#gives index of minimum value of array 0 1 2 3
                                                    4 5 6 7

np.argmax(ar2)

"""**cumsum**"""

ar1

np.cumsum(ar1)#if no argument pass it will add on by one

np.cumsum(ar1,axis=0)#column wise

np.cumsum(ar1,axis=1)

"""**Cum prod()**"""

ar2

np.cumprod(ar2)#ex 17*18=306,306*8=2448 -----

np.cumprod(ar1)

np.cumprod(ar2,axis=0)#column wise

np.cumprod(ar2,axis=1)

np.cumprod(ar1,axis=0)

np.cumprod(ar1,axis=1)

"""**Mean()**"""

normd=random.randn(3,3)

normd

np.mean(normd)

np.mean(normd,axis=0)

np.mean(normd,axis=1)

"""**std()**"""

np.std(normd)

np.std(normd,axis=0)

np.std(normd,axis=1)

"""**Var()**"""

np.var(normd)

np.var(normd,axis=0)

np.var(normd,axis=1)

"""***v ***"""



